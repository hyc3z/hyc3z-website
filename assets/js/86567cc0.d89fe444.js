"use strict";(self.webpackChunkhyc_3z_website=self.webpackChunkhyc_3z_website||[]).push([[9467],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),o=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(d.Provider,{value:t},e.children)},k="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),k=o(a),u=r,c=k["".concat(d,".").concat(u)]||k[u]||m[u]||l;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[k]="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},73512:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return o}});var n=a(83117),r=(a(67294),a(3905));const l={title:"Spark \u57fa\u7840\u77e5\u8bc6"},i=void 0,p={unversionedId:"big-data/spark",id:"big-data/spark",title:"Spark \u57fa\u7840\u77e5\u8bc6",description:"Spark",source:"@site/docs/big-data/spark.md",sourceDirName:"big-data",slug:"/big-data/spark",permalink:"/docs/big-data/spark",draft:!1,tags:[],version:"current",frontMatter:{title:"Spark \u57fa\u7840\u77e5\u8bc6"},sidebar:"tutorialSidebar",previous:{title:"Kafka & Zookeeper \u57fa\u7840\u77e5\u8bc6",permalink:"/docs/big-data/kafka"},next:{title:"Chainlink",permalink:"/docs/blockchain/Chainlink"}},d={},o=[{value:"Spark",id:"spark",level:4},{value:"Spark \u8bde\u751f",id:"spark-\u8bde\u751f",level:5},{value:"Unified",id:"unified",level:5},{value:"Computing Engine",id:"computing-engine",level:5},{value:"Libraries",id:"libraries",level:5},{value:"Spark Application",id:"spark-application",level:5},{value:"Cluster Mode",id:"cluster-mode",level:5},{value:"Client Mode",id:"client-mode",level:5},{value:"Local Mode",id:"local-mode",level:5},{value:"Lifecycle",id:"lifecycle",level:5},{value:"DataFrame",id:"dataframe",level:5},{value:"Partitions",id:"partitions",level:5},{value:"Transformations",id:"transformations",level:4},{value:"Narrow dependency(Narrow Transformation)",id:"narrow-dependencynarrow-transformation",level:5},{value:"Wide Dependency",id:"wide-dependency",level:5},{value:"Actions",id:"actions",level:5},{value:"Lazy Evaluation",id:"lazy-evaluation",level:5},{value:"Logical Planning and Physical Planning",id:"logical-planning-and-physical-planning",level:5},{value:"RDD",id:"rdd",level:4},{value:"\u6570\u636e\u7c7b\u578b",id:"\u6570\u636e\u7c7b\u578b",level:5},{value:"Spark SQL",id:"spark-sql",level:5},{value:"Stream Processing",id:"stream-processing",level:5},{value:"Micro Batches(DStream)",id:"micro-batchesdstream",level:5},{value:"\u6027\u80fd\u4f18\u5316",id:"\u6027\u80fd\u4f18\u5316",level:5},{value:"Stream Processing",id:"stream-processing-1",level:5},{value:"Structured Streaming",id:"structured-streaming",level:5},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:4}],s={toc:o};function k(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"spark"},"Spark"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Intermittent iteration of reads and writes between map and reduce computations",src:a(5426).Z,width:"1322",height:"206"})),(0,r.kt)("p",null,"Spark\u7684\u8bde\u751f\uff0c\u6e90\u4e8eHadoop\u7684\u51e0\u4e2a\u95ee\u9898\uff1a"),(0,r.kt)("p",null,"1\u3001\u7ba1\u7406\u8f83\u96be"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u5728\u5b66\u4e60Hadoop\u7684\u65f6\u5019\u5c31\u611f\u53d7\u5230\u4e86\uff0c\u4e00\u5927\u5806\u53c2\u6570\u9700\u8981\u8c03\uff0c\u975e\u5e38\u9ebb\u70e6"),(0,r.kt)("p",null,"2\u3001MapReduce API"),(0,r.kt)("p",null,"\u9700\u8981\u4e00\u5927\u5806\u6a21\u677f\u6587\u4ef6\u548c\u4ee3\u7801\uff0c\u800c\u4e14\u5f02\u5e38\u5904\u7406\u5f88\u96be\u3002"),(0,r.kt)("p",null,"3\u3001\u4e2d\u95f4\u6b65\u9aa4\u6709\u592a\u591a\u843d\u76d8"),(0,r.kt)("p",null,"\u8bda\u7136\u4fdd\u5b58\u4e2d\u95f4\u7ed3\u679c\u5230\u78c1\u76d8\uff0c\u53ef\u4ee5\u63d0\u5347\u53ef\u9760\u6027\uff0c\u4f46\u5927\u5927\u964d\u4f4e\u4e86\u901f\u5ea6\u548c\u6027\u80fd\u3002"),(0,r.kt)("p",null,"4\u3001\u96be\u4ee5\u9002\u5e94\u591a\u79cd\u591a\u6837\u7684\u6570\u636e\u9700\u6c42"),(0,r.kt)("p",null,"\u5e76\u4e0d\u662f\u6240\u6709\u4efb\u52a1\u90fd\u53ef\u4ee5\u62c6\u89e3\u4e3aMap\u548cReduce\uff0c\u6709\u4e9b\u4efb\u52a1\u6bd4\u5982AI\uff0c\u5b83\u5f53\u7136\u4e5f\u53ef\u4ee5\u7b97\u4f5c\u4e00\u4e2aReduce\uff0c\u4f46\u8fd9\u4e2aReducer\u8be5\u4f55\u5176\u5730\u590d\u6742\uff0c\u624d\u80fd\u5b8c\u6210\u54ea\u6015\u4e00\u6b65\u7684\u8ba1\u7b97\u3002\u5982\u679c\u662fAI\u8bad\u7ec3\u4efb\u52a1\u7b49\uff0c\u5219\u66f4\u52a0\u56f0\u96be\u3002"),(0,r.kt)("p",null,"5\u3001\u7f3a\u4e4f\u4ea4\u4e92\u6027"),(0,r.kt)("p",null,"\u6240\u6709\u7684\u4efb\u52a1\u90fd\u88ab\u9884\u5148\u5904\u7406\u597d\u8fdb\u5165Hadoop\u96c6\u7fa4\u5904\u7406\uff0c\u7f3a\u4e4f\u4ea4\u4e92\u6027"),(0,r.kt)("h5",{id:"spark-\u8bde\u751f"},"Spark \u8bde\u751f"),(0,r.kt)("p",null,"Spark \u6700\u65e9\u7531UC Berkeley \u7684\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u5f00\u53d1\uff0c\u4ed6\u4eec\u8ba4\u4e3aMapReduce\u4e0d\u591f\u6548\u7387\uff0c\u800c\u4e14\u8fc7\u4e8e\u590d\u6742\u3002\u6240\u4ee5Spark\u7684\u7406\u5ff5\u5c31\u662f\uff1a"),(0,r.kt)("p",null,"Simpler\uff0cFaster and Easier"),(0,r.kt)("p",null,"\u65e9\u671f\u7684Spark\u5c31\u5df2\u7ecf\u80fd\u591f\u8fbe\u5230Hadoop MapReduce 10~20\u500d\u7684\u6027\u80fd\u3002"),(0,r.kt)("p",null,"\u4eca\u5929\u5df2\u7ecf\u80fd\u8fbe\u5230100\u500d\u6027\u80fd"),(0,r.kt)("p",null,"Apache Spark\u2014a unified computing engine and set of libraries for big data"),(0,r.kt)("h5",{id:"unified"},"Unified"),(0,r.kt)("p",null,"Spark\u88ab\u8bbe\u8ba1\u4e3a\u652f\u6301\u5404\u79cd\u5404\u6837\u7684\u6570\u636e\u5206\u6790\u4efb\u52a1\uff0c\u6bd4\u5982\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Simple data"),(0,r.kt)("li",{parentName:"ul"},"SQL query"),(0,r.kt)("li",{parentName:"ul"},"ML/AI"),(0,r.kt)("li",{parentName:"ul"},"Streaming computation")),(0,r.kt)("p",null,"\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u4f7f\u7528\u540c\u4e00\u4e2a\u8ba1\u7b97\u5f15\u64ce\uff0c\u540c\u4e00\u5957API\u3002"),(0,r.kt)("p",null,"Spark\u7684API\u5185\u90e8\u8fd8\u6709\u4e00\u4e9b\u4f18\u5316\uff0c\u6bd4\u5982\u5148\u7528SQL query\u53d6\u6570\u636e\uff0c\u518d\u8c03\u7528Spark ML Library\uff0c"),(0,r.kt)("p",null,"Spark\u7684\u5f15\u64ce\u4f1a\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u8fdb\u884c\u5408\u5e76\u3001\u4f18\u5316\uff0c\u51cf\u5c11\u8bbf\u95ee\u6570\u636e\u7684\u6b21\u6570\u6765\u63d0\u5347\u6027\u80fd\u3002"),(0,r.kt)("h5",{id:"computing-engine"},"Computing Engine"),(0,r.kt)("p",null,"Spark\u7684\u5b9a\u4e49\u660e\u786e\u8bf4\u662f\u4e00\u4e2a computing engine\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u662f\u4e0d\u5305\u62ec\u6570\u636e\u7684\u5b58\u50a8\u548c\u843d\u76d8\u7684\u90e8\u5206\u7684\u3002\u4f60\u53ef\u4ee5\u5728Azure Storage, Amazon S3, Hadoop HDFS, Kafka, Cassandra\u7b49\u6570\u636e\u8f7d\u4f53\u4e0a\u7528Spark\uff0c\u65e0\u8bba\u662f\u6587\u4ef6\u7cfb\u7edf\uff0c\u6570\u636e\u5e93\u8fd8\u662f\u6d88\u606f\u961f\u5217\u3002"),(0,r.kt)("p",null,"\u76f8\u6bd4\u4e4b\u4e0b\uff0cHadoop\u65e2\u6709\u8ba1\u7b97\u5f15\u64ce\uff08MapReduce\uff09\u53c8\u6709\u5b58\u50a8\u7cfb\u7edf\uff08HDFS\uff09\uff0c\u4f7f\u5f97\u4e8c\u8005\u7d27\u7d27\u8026\u5408\uff0c\u96be\u4ee5\u9009\u62e9\u5176\u4ed6\u7684\u7cfb\u7edf\uff08\u867d\u7136\u7406\u8bba\u4e0aHadoop\u4e5f\u786e\u5b9e\u53ef\u4ee5\u8dd1\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff0cS3\u7b49\u4e4b\u4e0a\uff09\u3002"),(0,r.kt)("h5",{id:"libraries"},"Libraries"),(0,r.kt)("p",null,"\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684API\u63a5\u53e3\u6765\u5b8c\u6210\u901a\u7528\u7684\u6570\u636e\u5206\u6790\u4efb\u52a1\u3002"),(0,r.kt)("p",null,"Spark\u9664\u4e86\u5185\u90e8\u652f\u6301\u7684\u6807\u51c6\u5e93\uff0c\u8fd8\u6709\u5927\u91cf\u7b2c\u4e09\u65b9\u5e93\u3002"),(0,r.kt)("p",null,"\u4e00\u4e9b\u77e5\u540d\u7684Library\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Spark SQL"),(0,r.kt)("li",{parentName:"ul"},"MLlib"),(0,r.kt)("li",{parentName:"ul"},"Spark Streaming/Structured Streaming"),(0,r.kt)("li",{parentName:"ul"},"GraphX")),(0,r.kt)("h5",{id:"spark-application"},"Spark Application"),(0,r.kt)("p",null,"\u5305\u542bDriver process\u548cExecutors"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(99496).Z,width:"789",height:"539"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Spark components communicate through the Spark driver in Spark\u2019s distributed architecture",src:a(19547).Z,width:"1344",height:"725"})),(0,r.kt)("p",null,"Spark Driver\u8d1f\u8d23\u63a7\u5236\u7528\u6237\u4ea4\u4e92\u548c\u534f\u8c03executors\u4e4b\u95f4\u7684\u5de5\u4f5c\u3002"),(0,r.kt)("p",null,"Executors\u8d1f\u8d23\u5177\u4f53\u88ab\u5206\u914d\u5230\u7684\u5de5\u4f5c\u3002"),(0,r.kt)("p",null,"\u6bcf\u4e2aExecutor\u6267\u884c\u7684\uff0c\u5c31\u662fSpark Job\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Spark driver creating one or more Spark jobs",src:a(22770).Z,width:"538",height:"363"})),(0,r.kt)("p",null,"\u6bcf\u4e2aJob\u5305\u542b\u591a\u4e2aStage\uff0c\u6bcf\u4e2aStage\u5305\u542b\u591a\u4e2aTask"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Spark stage creating one or more tasks to be distributed to executors",src:a(92774).Z,width:"1300",height:"369"})),(0,r.kt)("h5",{id:"cluster-mode"},"Cluster Mode"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(35611).Z,width:"603",height:"460"})),(0,r.kt)("p",null,"Cluster Mode \u662f\u6700\u5e38\u89c1\u7684\u63d0\u4ea4\u4efb\u52a1\u7684\u65b9\u5f0f\uff1a"),(0,r.kt)("p",null,"\u7528\u6237\u63d0\u4ea4JAR/Python Script/xx Script -> Cluster manager\u5728Node\u4e0a\u542f\u52a8Driver process\u548cExecutor process"),(0,r.kt)("h5",{id:"client-mode"},"Client Mode"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(16658).Z,width:"669",height:"608"})),(0,r.kt)("p",null,"\u548cCluster Mode \u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0cClient \u6240\u5728\u7684\u673a\u5668\uff08\u4e5f\u5c31\u662f\u4efb\u52a1\u63d0\u4ea4\u7684\u673a\u5668\uff09\u4f1a\u7ef4\u62a4driver process\uff0c\u7136\u540ecluster manager\u7ef4\u62a4executor process\u3002\u8fd9\u4e9b\u673a\u5668\u4e5f\u88ab\u79f0\u4e3aGateway machines\u6216Edge nodes\uff0c\u662f\u53ef\u4ee5\u5904\u5728\u96c6\u7fa4\u4e4b\u5916\u7684\u3002"),(0,r.kt)("h5",{id:"local-mode"},"Local Mode"),(0,r.kt)("p",null,"\u5b66\u4e60\u65f6\u7528\uff0c\u5728\u672c\u5730\u8fd0\u884c"),(0,r.kt)("h5",{id:"lifecycle"},"Lifecycle"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(66191).Z,width:"835",height:"608"})),(0,r.kt)("p",null,"\u9996\u5148\u5ba2\u6237\u63d0\u4ea4\u4efb\u52a1\uff0c\u4e3aSpark Driver Process\u7533\u8bf7\u8d44\u6e90\u3002\u7136\u540eCluster Manager\u4f1a\u5c06Driver\u653e\u5728\u96c6\u7fa4\u4e2d\u7684\u67d0\u4e00\u4e2anode\u4e0a\u3002Driver\u5f00\u59cb\u6267\u884c\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u5305\u542bSparkSession\u7684\u521d\u59cb\u5316\u903b\u8f91\uff0c\u4f1a\u548c\u96c6\u7fa4\u4ea4\u4e92\u6765\u5728\u8282\u70b9\u4e2d\u5206\u5e03Executor\u8fdb\u7a0b\u3002Driver\u8d1f\u8d23\u8c03\u5ea6\uff0cWorkers\u5185\u90e8\u81ea\u4e3b\u901a\u4fe1\u3002"),(0,r.kt)("p",null,"\u4e00\u4e2aSpark Job\u5305\u542b\u591a\u4e2aStage\uff0c\u901a\u5e38Spark\u4f1a\u8bd5\u7740\u8ba9\u540c\u4e00\u4e2aStage\u6267\u884c\u66f4\u591a\u7684\u4efb\u52a1\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5e94\u8be5\u8ba9\u4efb\u52a1\u7684\u5206\u533a\u6570\u91cf\u5927\u4e8e\u96c6\u7fa4\u7684Executor\u6570\u91cf\uff0c\u6765\u63d0\u5347\u6548\u7387"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'spark.conf.set("spark.sql.shuffle.partitions", 50)\n')),(0,r.kt)("p",null,"Pipelining\u5c31\u76f8\u5bf9\u597d\u7406\u89e3\uff0c\u6bd4\u5982\u5148\u6267\u884cmap\uff0c\u518d\u6267\u884cfilter\uff0c\u5728\u6267\u884cmap\uff0c\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u5728Spark\u4e2d\u4f1a\u88ab\u4f18\u5316\u5728\u4e00\u4e2astage\u4e2d\u5b8c\u6210\uff0c\u4e2d\u9014\u4e0d\u843d\u76d8\u800c\u662f\u5728\u5185\u5b58\u4e2d\u8ba1\u7b97\uff0c\u6765\u63d0\u5347\u6548\u7387\u3002"),(0,r.kt)("h5",{id:"dataframe"},"DataFrame"),(0,r.kt)("p",null,"DataFrame\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u8868\u683c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6709\u5217\u4e0e\u884c\u3002"),(0,r.kt)("p",null,"Spark\u7684DataFrame\u548c\u539f\u751f\u7684\u533a\u522b\u5728\u4e8e\uff0c\u80fd\u591f\u8de8\u591a\u4e2a\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u5728\u5355\u4e00\u8282\u70b9\u4e0a\u3002"),(0,r.kt)("p",null,"\u53ef\u4ee5\u5c06Pandas\u7684df\u8f6c\u4e3aSpark\u7684df"),(0,r.kt)("h5",{id:"partitions"},"Partitions"),(0,r.kt)("p",null,"\u6bcf\u4e2aPartition\u5305\u542b\u603b\u6570\u636e\u4e2d\u7684\u82e5\u5e72\u884c\u5b50\u6570\u636e\uff0c\u5b58\u5728\u4e00\u53f0\u7269\u7406\u673a\u5668\u4e0a\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u53ea\u6709\u4e00\u4e2aPartition\uff0c\u6216\u8005\u53ea\u6709\u4e00\u4e2aExecutor\uff0c\u90fd\u65e0\u6cd5\u5e76\u884c\u5b8c\u6210\u4efb\u52a1\uff0c\u53ea\u6709\u591aPartition\u591aExecutor\u624d\u80fd\u771f\u6b63\u5e76\u884c"),(0,r.kt)("p",null,"\u8fd9\u90e8\u5206\u5206\u533a\u4e0d\u9700\u8981\u4eba\u4e3a\u6307\u5b9a\uff0c\u4f46\u662f\u6709\u5e95\u5c42API"),(0,r.kt)("h4",{id:"transformations"},"Transformations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# in Python\ndivisBy2 = myRange.where("number % 2 = 0")\n')),(0,r.kt)("h5",{id:"narrow-dependencynarrow-transformation"},"Narrow dependency(Narrow Transformation)"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(81649).Z,width:"435",height:"510"})),(0,r.kt)("p",null,"\u5bf9\u4efb\u610f\u4e00\u4e2a\u8f93\u5165\uff0c\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\uff0c\u79f0\u4e3aNarrow Dependency\u3002\u5bf9\u8fd9\u6837\u7684\u64cd\u4f5c\uff0cSpark\u4f1a\u8fdb\u884cPipelining\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u3002"),(0,r.kt)("h5",{id:"wide-dependency"},"Wide Dependency"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(17800).Z,width:"380",height:"510"})),(0,r.kt)("p",null,"\u5bf9Shuffle\u64cd\u4f5c\uff0cSpark\u4f1a\u5728\u96c6\u7fa4\u5185\u90e8\u4ea4\u6362Partition\uff0c\u7ed3\u679c\u4f1a\u5199\u5165\u78c1\u76d8\u3002"),(0,r.kt)("h5",{id:"actions"},"Actions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Actions to view data in the console"),(0,r.kt)("li",{parentName:"ul"},"Actions to collect data to native objects in the respective language"),(0,r.kt)("li",{parentName:"ul"},"Actions to write to output data sources")),(0,r.kt)("p",null,"\u5982\uff1a\u53d6\u5f97\u4e00\u4e2aDataFrame\u7684\u8bb0\u5f55\u6761\u6570"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"divisBy2.count()")),(0,r.kt)("p",null,"\u4e00\u4e9bTransformation\u548cActions\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Transformations"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Actions"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"orderBy()")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"show()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"groupBy()")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"take()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"filter()")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"count()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"select()")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"collect()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"join()")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"save()"))))),(0,r.kt)("h5",{id:"lazy-evaluation"},"Lazy Evaluation"),(0,r.kt)("p",null,"\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5e76\u4e0d\u7acb\u5373\u4fee\u6539\uff0c\u800c\u662f\u5efa\u7acb\u4e00\u4e2aplan\uff0c\u5305\u542b\u591a\u4e2a\u64cd\u4f5c\u3002"),(0,r.kt)("p",null,"\u76f4\u5230\u6700\u540e\uff0c\u7f16\u8bd1\u8fd9\u4e2aplan\uff0c\u7136\u540e\u4f18\u5316\u540e\u518d\u4e00\u8d77\u6267\u884c\u3002"),(0,r.kt)("p",null,"\u6bd4\u5982Predicate Pushdown\uff0c\u8fd9\u7c7b\u5728\u6570\u636e\u5e93\u7ecf\u5e38\u7528\u5230\u7684\u4f18\u5316\uff0c\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65f6\u5019\u505a\uff0c\u5927\u5927\u52a0\u5feb\u5904\u7406\u901f\u5ea6\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Lazy transformations and eager actions",src:a(86795).Z,width:"1220",height:"490"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(24844).Z,width:"1087",height:"483"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(64903).Z,width:"1014",height:"523"})),(0,r.kt)("h5",{id:"logical-planning-and-physical-planning"},"Logical Planning and Physical Planning"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(62814).Z,width:"1250",height:"343"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(3191).Z,width:"1367",height:"449"})),(0,r.kt)("h4",{id:"rdd"},"RDD"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20220902090236235",src:a(72114).Z,width:"1452",height:"628"})),(0,r.kt)("p",null,"\u53c2\u8003nsdi12-final138.pdf"),(0,r.kt)("p",null,"In short, an RDD represents an immutable, partitioned collection of records that can be operated on in parallel. Unlike DataFrames though, where each record is a structured row containing fields with a known schema, in RDDs the records are just Java, Scala, or Python objects of the programmer\u2019s choosing."),(0,r.kt)("p",null,"High Level API\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'from pyspark.sql import SparkSession\nfrom pyspark.sql.functions import avg\n# Create a DataFrame using SparkSession\nspark = (SparkSession\n  .builder\n  .appName("AuthorsAges")\n  .getOrCreate())\n# Create a DataFrame \ndata_df = spark.createDataFrame([("Brooke", 20), ("Denny", 31), ("Jules", 30), \n  ("TD", 35), ("Brooke", 25)], ["name", "age"])\n# Group the same names together, aggregate their ages, and compute an average\navg_df = data_df.groupBy("name").agg(avg("age"))\n# Show the results of the final execution\navg_df.show()\n')),(0,r.kt)("p",null,"\u5bf9\u5e94\u7684Low Level RDD\u64cd\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Create an RDD of tuples (name, age)\ndataRDD = sc.parallelize([("Brooke", 20), ("Denny", 31), ("Jules", 30), \n  ("TD", 35), ("Brooke", 25)])\n# Use map and reduceByKey transformations with their lambda \n# expressions to aggregate and then compute average\n\nagesRDD = (dataRDD\n  .map(lambda x: (x[0], (x[1], 1)))\n  .reduceByKey(lambda x, y: (x[0] + y[0], x[1] + y[1]))\n  .map(lambda x: (x[0], x[1][0]/x[1][1])))\n')),(0,r.kt)("p",null,"\u521b\u5efaRDD"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"spark.range(10).rdd\n")),(0,r.kt)("h5",{id:"\u6570\u636e\u7c7b\u578b"},"\u6570\u636e\u7c7b\u578b"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Data type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value assigned in Scala"),(0,r.kt)("th",{parentName:"tr",align:"left"},"API to instantiate"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ByteType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Byte")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.ByteType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ShortType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Short")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.ShortType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"IntegerType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Int")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.IntegerType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LongType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Long")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.LongType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"FloatType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Float")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.FloatType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DoubleType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Double")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.DoubleType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StringType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.StringType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BooleanType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DataTypes.BooleanType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DecimalType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"java.math.BigDecimal")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DecimalType"))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Data type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value assigned in Python"),(0,r.kt)("th",{parentName:"tr",align:"left"},"API to instantiate"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BinaryType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytearray")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BinaryType()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TimestampType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime.datetime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TimestampType()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DateType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime.date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DateType()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ArrayType")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List, tuple, or array"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ArrayType(dataType, [nullable])"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"MapType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dict")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"MapType(keyType, valueType, [nullable])"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StructType")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List or tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StructType([fields])"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StructField")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value type corresponding to the type of this field"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"StructField(name, dataType, [nullable])"))))),(0,r.kt)("h5",{id:"spark-sql"},"Spark SQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'spark.read.json("/data/flight-data/json/2015-summary.json")\\\n  .createOrReplaceTempView("some_sql_view") # DF => SQL\n\nspark.sql("""\nSELECT DEST_COUNTRY_NAME, sum(count)\nFROM some_sql_view GROUP BY DEST_COUNTRY_NAME\n""")\\\n  .where("DEST_COUNTRY_NAME like \'S%\'").where("`sum(count)` > 10")\\\n  .count() # SQL => DF\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"When errors are detected using the Structured APIs",src:a(55311).Z,width:"718",height:"423"})),(0,r.kt)("h5",{id:"stream-processing"},"Stream Processing"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Traditional record-at-a-time processing model",src:a(39665).Z,width:"1187",height:"690"})),(0,r.kt)("h5",{id:"micro-batchesdstream"},"Micro Batches(DStream)"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Structured Streaming uses a micro-batch processing model",src:a(64998).Z,width:"1384",height:"515"})),(0,r.kt)("p",null,"\u79d2\u7ea7\u5ef6\u8fdf\uff0c\u4f46\u5927\u5927\u964d\u4f4e\u5355\u673a\u5904\u7406\u6570\u636e\u7684\u5f00\u9500"),(0,r.kt)("p",null,"Incremental Execution"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"The Structured Streaming programming model: data stream as an unbounded table",src:a(71228).Z,width:"1248",height:"565"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Incremental execution of streaming queries",src:a(16338).Z,width:"1440",height:"743"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# In Python\ninputDF = (spark\n  .readStream\n  .format("kafka")\n  .option("kafka.bootstrap.servers", "host1:port1,host2:port2")\n  .option("subscribe", "events")\n  .load())\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'streamingQuery = (counts\n  .selectExpr(\n    "cast(word as string) as key", \n    "cast(count as string) as value")\n  .writeStream\n  .format("kafka")\n  .option("kafka.bootstrap.servers", "host1:port1,host2:port2")\n  .option("topic", "wordCounts")\n  .outputMode("update")\n  .option("checkpointLocation", checkpointDir)\n  .start())\n')),(0,r.kt)("h5",{id:"\u6027\u80fd\u4f18\u5316"},"\u6027\u80fd\u4f18\u5316"),(0,r.kt)("p",null,"\u603b\u4f53\u6765\u8bf4\uff0c\u6587\u4ef6\u6700\u597d\u4f7f\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\uff0c\u800c\u4e0d\u662fcsv\u683c\u5f0f\uff0c\u56e0\u4e3a\u6587\u4ef6\u6700\u597d\u80fd\u591f\u88abSplit\u6210\u591a\u4e2a\u5206\u5757\u6765\u8ba9\u4e0d\u540c\u7684\u8fdb\u7a0b\u8bfb\u53d6\u3002\u8fd9\u4e5f\u7275\u51fa\u4e86\u4e4b\u524dHadoop\u9047\u5230\u7684\u540c\u6837\u95ee\u9898\uff0c\u53ef\u5206\u5272\u538b\u7f29\u683c\u5f0f\u3002Zip\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u65e0\u6cd5\u5206\u5272\u7684\u538b\u7f29\u683c\u5f0f\uff0c\u4f7f\u7528Zip\u683c\u5f0f\u610f\u5473\u7740\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u80fd\u4ece\u5934\u5230\u5c3e\u8bfb\u53d6\u5b83\u7684\u6570\u636e\uff0c\u4e0d\u80fd\u4ece\u4e2d\u5206\u6bb5\u8bfb\u53d6\u3002\u76f8\u5bf9\u6765\u8bf4\uff0cgz, bz2, lz4\u5c31\u90fd\u6709\u529e\u6cd5\u53ef\u4ee5\u5206\u5272\uff0c\u63d0\u5347\u8bfb\u53d6\u6548\u7387\u3002"),(0,r.kt)("p",null,"\u907f\u514dUDF\uff08User-Defined Functions\uff09\uff0c\u5c24\u5176\u662f\u5728Python\u548cR\u8bed\u8a00\u4e2d\uff0c\u811a\u672c\u8bed\u8a00\u672c\u8eab\u89e3\u6790\u901f\u5ea6\u5c31\u6709\u9650\uff0c\u5c3d\u91cf\u4f7f\u7528Structure API"),(0,r.kt)("h5",{id:"stream-processing-1"},"Stream Processing"),(0,r.kt)("p",null,"\u4f18\u52bf\uff1a"),(0,r.kt)("p",null,"\u4f4e\u5ef6\u8fdf\uff0c\u589e\u91cf\u66f4\u65b0\u7ed3\u679c\uff0c\u9ad8\u6548\u7387\uff08\u4e0eBatch processing \u76f8\u6bd4\uff09"),(0,r.kt)("p",null,"\u6311\u6218\uff1a"),(0,r.kt)("p",null,"\u4e71\u5e8f\u6570\u636e"),(0,r.kt)("p",null,"\u590d\u6742\u72b6\u6001"),(0,r.kt)("p",null,"\u9ad8\u541e\u5410"),(0,r.kt)("p",null,"Exact once"),(0,r.kt)("p",null,"\u4f4e\u5ef6\u8fdf"),(0,r.kt)("h5",{id:"structured-streaming"},"Structured Streaming"),(0,r.kt)("p",null,"Structured streaming\u7684\u76ee\u7684\u5728\u4e8e\u590d\u7528\u5df2\u6709\u7684Batch API\uff08DataFrame, Dataset, SQL\uff09\uff0c\u5b83\u5c06\u6bcf\u4e00\u6761\u65b0\u6570\u636e\u5f53\u4f5c\u8868\u4e2d\u7684\u4e00\u6761\u65b0\u7eaa\u5f55\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(19720).Z,width:"1182",height:"482"})),(0,r.kt)("p",null,"\u4eceInput\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u5199\u5230Sink\u4e2d\u3002"),(0,r.kt)("p",null,"\u6700\u5178\u578b\u7684\u6570\u636e\u5b58\u53d6\u6e90\u5c31\u662fApache Kafka\u3002"),(0,r.kt)("h4",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"brew install scala")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"brew install apache-spark")))}k.isMDXComponent=!0},72114:function(e,t,a){t.Z=a.p+"assets/images/image-20220902090236235-6e9eb6bc8a6f1b627afc25ab86e1a262.png"},5426:function(e,t,a){t.Z=a.p+"assets/images/lesp_0101-644e0335ae96b94ae72cc6f638bc6c7b.png"},19547:function(e,t,a){t.Z=a.p+"assets/images/lesp_0202-c291fe7b2a6597bb49056f64c4bd91c1.png"},22770:function(e,t,a){t.Z=a.p+"assets/images/lesp_0203-325c151502308130ea846aeeb07a9e15.png"},92774:function(e,t,a){t.Z=a.p+"assets/images/lesp_0205-309e3298ad00f0d44c4efbbdf5be5739.png"},86795:function(e,t,a){t.Z=a.p+"assets/images/lesp_0206-b26e0266a9ab6818ae91bcfa2e9b381c.png"},55311:function(e,t,a){t.Z=a.p+"assets/images/lesp_0302-da1d1d7e70e476d3a763ebd9973b0e98.png"},39665:function(e,t,a){t.Z=a.p+"assets/images/lesp_0801-994a70bde4841cba56817e8ae5b26da5.png"},64998:function(e,t,a){t.Z=a.p+"assets/images/lesp_0802-57bd392273471943454f74476d516625.png"},71228:function(e,t,a){t.Z=a.p+"assets/images/lesp_0803-5862a2a249b3e3f6d5536a93d058c562.png"},16338:function(e,t,a){t.Z=a.p+"assets/images/lesp_0805-9ade2b02592cbea1176348dbd309b2e7.png"},99496:function(e,t,a){t.Z=a.p+"assets/images/spdg_0201-78b411902419c7fb27042973ee892686.png"},81649:function(e,t,a){t.Z=a.p+"assets/images/spdg_0204-2bd800704fe2ff38e1cae57a503b50f6.png"},17800:function(e,t,a){t.Z=a.p+"assets/images/spdg_0205-8c3dfa95316513ee42a9f27c9c3c016a.png"},24844:function(e,t,a){t.Z=a.p+"assets/images/spdg_0209-8aa6a14ed6dd30fba8d6b7d8f9ca107c.png"},64903:function(e,t,a){t.Z=a.p+"assets/images/spdg_0401-1490378de6a7cf7df788d80259012684.png"},62814:function(e,t,a){t.Z=a.p+"assets/images/spdg_0402-3baad4b3fdfeb2daa132e6ca4aab80bd.png"},3191:function(e,t,a){t.Z=a.p+"assets/images/spdg_0403-582bc7da18e81d77923a495225f51b53.png"},35611:function(e,t,a){t.Z=a.p+"assets/images/spdg_1502-d269753ef2f36d3f511fd78dee997476.png"},16658:function(e,t,a){t.Z=a.p+"assets/images/spdg_1503-81bbbd5aa6647105e04db6752bcf916d.png"},66191:function(e,t,a){t.Z=a.p+"assets/images/spdg_1504-6f0730af1791e59be87dbda74927072f.png"},19720:function(e,t,a){t.Z=a.p+"assets/images/spdg_2101-ef115015d57e5debbbd4a23070648df9.png"}}]);